{
  "type": "File",
  "start": 0,
  "end": 625,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 26,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 625,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 26,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 26,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 26
          }
        },
        "specifiers": [
          {
            "type": "ImportDefaultSpecifier",
            "start": 7,
            "end": 11,
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 11
              }
            },
            "local": {
              "type": "Identifier",
              "start": 7,
              "end": 11,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 7
                },
                "end": {
                  "line": 1,
                  "column": 11
                },
                "identifierName": "pipe"
              },
              "name": "pipe"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 17,
          "end": 25,
          "loc": {
            "start": {
              "line": 1,
              "column": 17
            },
            "end": {
              "line": 1,
              "column": 25
            }
          },
          "extra": {
            "rawValue": "./pipe",
            "raw": "'./pipe'"
          },
          "value": "./pipe"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * 指定された引数を使用して最初の関数を呼び出し、その結果を引数に次の関数を呼び出します。引数にコードの一部を使用したい場合は、tCallマクロを使用してください。\n *\n * @param {*} x - 最初の関数の引数\n * @param {function[] | iterator} fs - 順番に呼び出す関数の集合\n *\n * @return {*} 最後の関数の戻り値\n *\n * @example\n * call(x, foo, bar);\n * // = bar(foo(x));\n *\n * @example\n * tCall(iterate(inc, 1),\n *       takeWhile(x => x < 10),\n *       filter(x => x % 2));\n *\n * // = call(iterate(inc, 1), xs => takeWhile(x => x < 10, xs), xs => filter(x => x % 2, xs))\n * // = filter(x => x % 2, takeWhile(x => x < 10, iterate(inc, 1)))\n ",
            "start": 28,
            "end": 556,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 22,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportDefaultDeclaration",
        "start": 557,
        "end": 624,
        "loc": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 1
          }
        },
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 572,
          "end": 624,
          "loc": {
            "start": {
              "line": 23,
              "column": 15
            },
            "end": {
              "line": 25,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 581,
            "end": 585,
            "loc": {
              "start": {
                "line": 23,
                "column": 24
              },
              "end": {
                "line": 23,
                "column": 28
              },
              "identifierName": "call"
            },
            "name": "call",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 586,
              "end": 587,
              "loc": {
                "start": {
                  "line": 23,
                  "column": 29
                },
                "end": {
                  "line": 23,
                  "column": 30
                },
                "identifierName": "x"
              },
              "name": "x"
            },
            {
              "type": "RestElement",
              "start": 589,
              "end": 594,
              "loc": {
                "start": {
                  "line": 23,
                  "column": 32
                },
                "end": {
                  "line": 23,
                  "column": 37
                }
              },
              "argument": {
                "type": "Identifier",
                "start": 592,
                "end": 594,
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 35
                  },
                  "end": {
                    "line": 23,
                    "column": 37
                  },
                  "identifierName": "fs"
                },
                "name": "fs"
              }
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 596,
            "end": 624,
            "loc": {
              "start": {
                "line": 23,
                "column": 39
              },
              "end": {
                "line": 25,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 600,
                "end": 622,
                "loc": {
                  "start": {
                    "line": 24,
                    "column": 2
                  },
                  "end": {
                    "line": 24,
                    "column": 24
                  }
                },
                "argument": {
                  "type": "CallExpression",
                  "start": 607,
                  "end": 621,
                  "loc": {
                    "start": {
                      "line": 24,
                      "column": 9
                    },
                    "end": {
                      "line": 24,
                      "column": 23
                    }
                  },
                  "callee": {
                    "type": "CallExpression",
                    "start": 607,
                    "end": 618,
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 9
                      },
                      "end": {
                        "line": 24,
                        "column": 20
                      }
                    },
                    "callee": {
                      "type": "Identifier",
                      "start": 607,
                      "end": 611,
                      "loc": {
                        "start": {
                          "line": 24,
                          "column": 9
                        },
                        "end": {
                          "line": 24,
                          "column": 13
                        },
                        "identifierName": "pipe"
                      },
                      "name": "pipe"
                    },
                    "arguments": [
                      {
                        "type": "SpreadElement",
                        "start": 612,
                        "end": 617,
                        "loc": {
                          "start": {
                            "line": 24,
                            "column": 14
                          },
                          "end": {
                            "line": 24,
                            "column": 19
                          }
                        },
                        "argument": {
                          "type": "Identifier",
                          "start": 615,
                          "end": 617,
                          "loc": {
                            "start": {
                              "line": 24,
                              "column": 17
                            },
                            "end": {
                              "line": 24,
                              "column": 19
                            },
                            "identifierName": "fs"
                          },
                          "name": "fs"
                        }
                      }
                    ]
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 619,
                      "end": 620,
                      "loc": {
                        "start": {
                          "line": 24,
                          "column": 21
                        },
                        "end": {
                          "line": 24,
                          "column": 22
                        },
                        "identifierName": "x"
                      },
                      "name": "x"
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * 指定された引数を使用して最初の関数を呼び出し、その結果を引数に次の関数を呼び出します。引数にコードの一部を使用したい場合は、tCallマクロを使用してください。\n *\n * @param {*} x - 最初の関数の引数\n * @param {function[] | iterator} fs - 順番に呼び出す関数の集合\n *\n * @return {*} 最後の関数の戻り値\n *\n * @example\n * call(x, foo, bar);\n * // = bar(foo(x));\n *\n * @example\n * tCall(iterate(inc, 1),\n *       takeWhile(x => x < 10),\n *       filter(x => x % 2));\n *\n * // = call(iterate(inc, 1), xs => takeWhile(x => x < 10, xs), xs => filter(x => x % 2, xs))\n * // = filter(x => x % 2, takeWhile(x => x < 10, iterate(inc, 1)))\n ",
              "start": 28,
              "end": 556,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 0
                },
                "end": {
                  "line": 22,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * 指定された引数を使用して最初の関数を呼び出し、その結果を引数に次の関数を呼び出します。引数にコードの一部を使用したい場合は、tCallマクロを使用してください。\n *\n * @param {*} x - 最初の関数の引数\n * @param {function[] | iterator} fs - 順番に呼び出す関数の集合\n *\n * @return {*} 最後の関数の戻り値\n *\n * @example\n * call(x, foo, bar);\n * // = bar(foo(x));\n *\n * @example\n * tCall(iterate(inc, 1),\n *       takeWhile(x => x < 10),\n *       filter(x => x % 2));\n *\n * // = call(iterate(inc, 1), xs => takeWhile(x => x < 10, xs), xs => filter(x => x % 2, xs))\n * // = filter(x => x % 2, takeWhile(x => x < 10, iterate(inc, 1)))\n ",
            "start": 28,
            "end": 556,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 22,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * 指定された引数を使用して最初の関数を呼び出し、その結果を引数に次の関数を呼び出します。引数にコードの一部を使用したい場合は、tCallマクロを使用してください。\n *\n * @param {*} x - 最初の関数の引数\n * @param {function[] | iterator} fs - 順番に呼び出す関数の集合\n *\n * @return {*} 最後の関数の戻り値\n *\n * @example\n * call(x, foo, bar);\n * // = bar(foo(x));\n *\n * @example\n * tCall(iterate(inc, 1),\n *       takeWhile(x => x < 10),\n *       filter(x => x % 2));\n *\n * // = call(iterate(inc, 1), xs => takeWhile(x => x < 10, xs), xs => filter(x => x % 2, xs))\n * // = filter(x => x % 2, takeWhile(x => x < 10, iterate(inc, 1)))\n ",
      "start": 28,
      "end": 556,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "pipe",
      "start": 7,
      "end": 11,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 12,
      "end": 16,
      "loc": {
        "start": {
          "line": 1,
          "column": 12
        },
        "end": {
          "line": 1,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./pipe",
      "start": 17,
      "end": 25,
      "loc": {
        "start": {
          "line": 1,
          "column": 17
        },
        "end": {
          "line": 1,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 25,
      "end": 26,
      "loc": {
        "start": {
          "line": 1,
          "column": 25
        },
        "end": {
          "line": 1,
          "column": 26
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * 指定された引数を使用して最初の関数を呼び出し、その結果を引数に次の関数を呼び出します。引数にコードの一部を使用したい場合は、tCallマクロを使用してください。\n *\n * @param {*} x - 最初の関数の引数\n * @param {function[] | iterator} fs - 順番に呼び出す関数の集合\n *\n * @return {*} 最後の関数の戻り値\n *\n * @example\n * call(x, foo, bar);\n * // = bar(foo(x));\n *\n * @example\n * tCall(iterate(inc, 1),\n *       takeWhile(x => x < 10),\n *       filter(x => x % 2));\n *\n * // = call(iterate(inc, 1), xs => takeWhile(x => x < 10, xs), xs => filter(x => x % 2, xs))\n * // = filter(x => x % 2, takeWhile(x => x < 10, iterate(inc, 1)))\n ",
      "start": 28,
      "end": 556,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 557,
      "end": 563,
      "loc": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 23,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "default",
        "keyword": "default",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "default",
      "start": 564,
      "end": 571,
      "loc": {
        "start": {
          "line": 23,
          "column": 7
        },
        "end": {
          "line": 23,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 572,
      "end": 580,
      "loc": {
        "start": {
          "line": 23,
          "column": 15
        },
        "end": {
          "line": 23,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "call",
      "start": 581,
      "end": 585,
      "loc": {
        "start": {
          "line": 23,
          "column": 24
        },
        "end": {
          "line": 23,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 585,
      "end": 586,
      "loc": {
        "start": {
          "line": 23,
          "column": 28
        },
        "end": {
          "line": 23,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "x",
      "start": 586,
      "end": 587,
      "loc": {
        "start": {
          "line": 23,
          "column": 29
        },
        "end": {
          "line": 23,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 587,
      "end": 588,
      "loc": {
        "start": {
          "line": 23,
          "column": 30
        },
        "end": {
          "line": 23,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "...",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 589,
      "end": 592,
      "loc": {
        "start": {
          "line": 23,
          "column": 32
        },
        "end": {
          "line": 23,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fs",
      "start": 592,
      "end": 594,
      "loc": {
        "start": {
          "line": 23,
          "column": 35
        },
        "end": {
          "line": 23,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 594,
      "end": 595,
      "loc": {
        "start": {
          "line": 23,
          "column": 37
        },
        "end": {
          "line": 23,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 596,
      "end": 597,
      "loc": {
        "start": {
          "line": 23,
          "column": 39
        },
        "end": {
          "line": 23,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 600,
      "end": 606,
      "loc": {
        "start": {
          "line": 24,
          "column": 2
        },
        "end": {
          "line": 24,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "pipe",
      "start": 607,
      "end": 611,
      "loc": {
        "start": {
          "line": 24,
          "column": 9
        },
        "end": {
          "line": 24,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 611,
      "end": 612,
      "loc": {
        "start": {
          "line": 24,
          "column": 13
        },
        "end": {
          "line": 24,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "...",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 612,
      "end": 615,
      "loc": {
        "start": {
          "line": 24,
          "column": 14
        },
        "end": {
          "line": 24,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fs",
      "start": 615,
      "end": 617,
      "loc": {
        "start": {
          "line": 24,
          "column": 17
        },
        "end": {
          "line": 24,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 617,
      "end": 618,
      "loc": {
        "start": {
          "line": 24,
          "column": 19
        },
        "end": {
          "line": 24,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 618,
      "end": 619,
      "loc": {
        "start": {
          "line": 24,
          "column": 20
        },
        "end": {
          "line": 24,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "x",
      "start": 619,
      "end": 620,
      "loc": {
        "start": {
          "line": 24,
          "column": 21
        },
        "end": {
          "line": 24,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 620,
      "end": 621,
      "loc": {
        "start": {
          "line": 24,
          "column": 22
        },
        "end": {
          "line": 24,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 621,
      "end": 622,
      "loc": {
        "start": {
          "line": 24,
          "column": 23
        },
        "end": {
          "line": 24,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 623,
      "end": 624,
      "loc": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 625,
      "end": 625,
      "loc": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 26,
          "column": 0
        }
      }
    }
  ]
}